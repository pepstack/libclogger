/*******************************************************************************
* Copyright © 2024-2025 Light Zhang <mapaware@hotmail.com>, MapAware, Inc.     *
* ALL RIGHTS RESERVED.                                                         *
*                                                                              *
* PERMISSION IS HEREBY GRANTED, FREE OF CHARGE, TO ANY PERSON OR ORGANIZATION  *
* OBTAINING A COPY OF THE SOFTWARE COVERED BY THIS LICENSE TO USE, REPRODUCE,  *
* DISPLAY, DISTRIBUTE, EXECUTE, AND TRANSMIT THE SOFTWARE, AND TO PREPARE      *
* DERIVATIVE WORKS OF THE SOFTWARE, AND TO PERMIT THIRD - PARTIES TO WHOM THE  *
* SOFTWARE IS FURNISHED TO DO SO, ALL SUBJECT TO THE FOLLOWING :               *
*                                                                              *
* THE COPYRIGHT NOTICES IN THE SOFTWARE AND THIS ENTIRE STATEMENT, INCLUDING   *
* THE ABOVE LICENSE GRANT, THIS RESTRICTION AND THE FOLLOWING DISCLAIMER, MUST *
* BE INCLUDED IN ALL COPIES OF THE SOFTWARE, IN WHOLE OR IN PART, AND ALL      *
* DERIVATIVE WORKS OF THE SOFTWARE, UNLESS SUCH COPIES OR DERIVATIVE WORKS ARE *
* SOLELY IN THE FORM OF MACHINE - EXECUTABLE OBJECT CODE GENERATED BY A SOURCE *
* LANGUAGE PROCESSOR.                                                          *
*                                                                              *
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR   *
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,     *
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON - INFRINGEMENT.IN NO EVENT   *
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE    *
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,  *
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER  *
* DEALINGS IN THE SOFTWARE.                                                    *
*******************************************************************************/
/*
** @file      rtclock_i.h
**   real time clock up to year 2484.
**   internal type definition
** @copyright © 2024-2030 mapaware.top All Rights Reserved.
** @author     Liang Zhang <350137278@qq.com>
** @version   0.0.5
** @since     2020-12-14 10:44:05
** @date     2024-11-04 01:44:05
*/
#ifndef _RTCLOCK_I_H__
#define _RTCLOCK_I_H__

#ifdef __cplusplus
extern "C" {
#endif

#include "rtclock.h"
#include "uatomic.h"

#include "timeut.h"
#include "fileut.h"


/**
 * linux date command:
 *   https://blog.csdn.net/mergerly/article/details/41597235
 */

#ifdef _WIN32
  # define HAVE_STRUCT_TIMESPEC
  # include <pthread.h>

  # ifdef _MSC_VER
    # pragma comment(lib, "pthreadVC2.lib")  // link to pthread-w32 lib
  # endif
# else
  # include <pthread.h>
#endif

/* (ms) milliseconds of one second */
#define MILLIS_OF_SECOND   ((uint64_t)1000l)

/* (us) microseconds of one second */
#define MICROS_OF_SECOND   ((uint64_t)1000000l)

/* (ns) nanoeconds of one second */
#define NANOS_OF_SECOND    ((uint64_t)1000000000l)


typedef struct _rtclock_t
{
    /* if 0 : no initialized */
    uatomic_int initialized;

    uatomic_int ratious;

    pthread_mutex_t timerlock;
    pthread_t timerthread;

    /* fake time in nanos supports up to max year 2484 AC. */
    uatomic_int64 ticknanos;

    int daylight;
    long timezone;
    char timezonefmt[TIMEZONE_FORMAT_LEN + 1];
} rtclock_t;


static void rtclock_updatetime (rtclock_handle rtc, struct timespec *nowtime)
{
    uint64_t timeus;

    getnowtimeofday(nowtime);

    /* now time in us: timeus=1606890292682864 */
    timeus = (uint64_t)(((int64_t) nowtime->tv_sec) * MICROS_OF_SECOND + nowtime->tv_nsec / 1000);

    /* aligned time in us: timeus=1606890292000000 */
    timeus = (uint64_t)((timeus / rtc->ratious) * rtc->ratious);

    /* set aligned time in ns: ticknanos=1606890292000000000 */
    uatomic_int64_set(&rtc->ticknanos, timeus * (uint64_t)1000);
}


#ifdef __cplusplus
}
#endif
#endif /* _RTCLOCK_I_H__ */
